#include "letterArrays.h"


/*CycleTiming::CycleTiming(int cycleTime) {
    cycleTimeMillis = cycleTime;
    lastCheckMillis = 0;
}


boolean CycleTiming::check() {
    if (lastCheckMillis == 0) {
        lastCheckMillis = millis();
        return true;
    }
    else if ((millis() - lastCheckMillis) > cycleTimeMillis) {
        lastCheckMillis = millis();
        return true;
    }
    else {
        return false;
    }
}*/

struct Image {
  int width, height, *pixels;
};

int[] letterArrays::createArray(String inputStr){
	int outArr[];

	//first go through and calculate the length
	//then initialize the array to that length
	//then append the images together

	for (int i = 0; i < inputStr.length; i++) { 
		char thisChar = inputStr.charAt(i);
	}
}

//a
byte a_base[] PROGMEM = {
  000, //0, 0, 0, 0, 0, 0, 
  000, //0, 0, 0, 0, 0, 0, 
  034, //0, 1, 1, 1, 0, 0, 
  002, //0, 0, 0, 0, 1, 0, 
  036, //0, 1, 1, 1, 1, 0, 
  042, //1, 0, 0, 0, 1, 0, 
  036, //0, 1, 1, 1, 1, 0, 
  000  //0, 0, 0, 0, 0, 0
}

struct Image a = {
  6, 8, a_base
};

//b 
byte b_base[] PROGMEM = {
1, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 
1, 0, 1, 1, 0, 0, 
1, 1, 0, 0, 1, 0, 
1, 0, 0, 0, 1, 0, 
1, 0, 0, 0, 1, 0, 
1, 1, 1, 1, 0, 0, 
0, 0, 0, 0, 0, 0}; 

struct Image b = {
  6, 8, b_base
};

//c
int c_base[] PROGMEM = {
0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 
0, 1, 1, 1, 0, 0, 
1, 0, 0, 0, 1, 0, 
1, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 1, 0, 
0, 1, 1, 1, 0, 0, 
0, 0, 0, 0, 0, 0};

struct Image c = {
  6, 8, c_base
};

//d
int d_base[] PROGMEM = {
0, 0, 0, 0, 1, 0, 
0, 0, 0, 0, 1, 0, 
0, 1, 1, 0, 1, 0, 
1, 0, 0, 1, 1, 0, 
1, 0, 0, 0, 1, 0, 
1, 0, 0, 0, 1, 0, 
0, 1, 1, 1, 1, 0, 
0, 0, 0, 0, 0, 0};

struct Image d = {
  6, 8, d_base
};

//e
int e_base[] PROGMEM = {
0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 
0, 1, 1, 1, 0, 0, 
1, 0, 0, 0, 1, 0, 
1, 1, 1, 1, 1, 0, 
1, 0, 0, 0, 0, 0, 
0, 1, 1, 1, 1, 0, 
0, 0, 0, 0, 0, 0};

struct Image e = {
  6, 8, e_base
};

//f
int f_base[] PROGMEM = {
0, 0, 1, 1, 0, 
0, 1, 0, 0, 0, 
1, 1, 1, 1, 0, 
0, 1, 0, 0, 0, 
0, 1, 0, 0, 0, 
0, 1, 0, 0, 0, 
0, 1, 0, 0, 0, 
0, 0, 0, 0, 0};

struct Image f = {
  5, 8, f_base
};

//g
int g_base[] PROGMEM = {
0, 0, 0, 0, 0, 0,
0, 0, 0, 0, 0, 0,
0, 1, 1, 1, 1, 0,
1, 0, 0, 0, 1, 0,
1, 0, 0, 0, 1, 0,
0, 1, 1, 1, 1, 0,
0, 0, 0, 0, 1, 0,
1, 1, 1, 1, 0, 0};

struct Image g = {
  6, 8, g_base
};

//h
int h_base[] PROGMEM = {
 1, 0, 0, 0, 0, 0,
 1, 0, 0, 0, 0, 0,
 1, 0, 1, 1, 0, 0,
 1, 1, 0, 0, 1, 0,
 1, 0, 0, 0, 1, 0,
 1, 0, 0, 0, 1, 0,
 1, 0, 0, 0, 1, 0,
 0, 0, 0, 0, 0, 0};

 struct Image h = {
  6, 8, h_base
};

//i
int i_base[] PROGMEM = {
 1, 0,
 0, 0,
 1, 0,
 1, 0,
 1, 0,
 1, 0,
 1, 0,
 0, 0};

 struct Image i = {
  2, 8, i_base
};

//j
int j_base[] PROGMEM = {
 0, 0, 0, 0, 1, 0, 
 0, 0, 0, 0, 0, 0, 
 0, 0, 0, 0, 1, 0, 
 0, 0, 0, 0, 1, 0, 
 0, 0, 0, 0, 1, 0, 
 1, 0, 0, 0, 1, 0, 
 1, 0, 0, 0, 1, 0, 
 0, 1, 1, 1, 0, 0};

//k
int k_base[] PROGMEM = {
1, 0, 0, 0, 0,
1, 0, 0, 0, 0,
1, 0, 0, 1, 0,
1, 0, 1, 0, 0,
1, 1, 0, 0, 0,
1, 0, 1, 0, 0,
1, 0, 0, 1, 0,
0, 0, 0, 0, 0};

//l
int l_base[] PROGMEM = {
 1, 0, 0,
 1, 0, 0,
 1, 0, 0,
 1, 0, 0,
 1, 0, 0,
 1, 0, 0,
 0, 1, 0,
 0, 0, 0};

//m
int m_base[] PROGMEM = {
 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0,
 1, 1, 0, 1, 0, 0,
 1, 0, 1, 0, 1, 0,
 1, 0, 1, 0, 1, 0,
 1, 0, 0, 0, 1, 0,
 1, 0, 0, 0, 1, 0,
 0, 0, 0, 0, 0, 0};

//n
int n_base[] PROGMEM = {
 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0,
 1, 1, 1, 1, 0, 0,
 1, 0, 0, 0, 1, 0,
 1, 0, 0, 0, 1, 0,
 1, 0, 0, 0, 1, 0,
 1, 0, 0, 0, 1, 0,
 0, 0, 0, 0, 0, 0};

//o
int o_base[] PROGMEM = {
 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0,
 0, 1, 1, 1, 0, 0,
 1, 0, 0, 0, 1, 0,
 1, 0, 0, 0, 1, 0,
 1, 0, 0, 0, 1, 0,
 0, 1, 1, 1, 0, 0,
 0, 0, 0, 0, 0, 0};

//p
int p_base[] PROGMEM = {
 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0,
 1, 0, 1, 1, 0, 0,
 1, 1, 0, 0, 1, 0,
 1, 0, 0, 0, 1, 0,
 1, 1, 1, 1, 0, 0,
 1, 0, 0, 0, 0, 0,
 1, 0, 0, 0, 0, 0};

//q
int q_base[] PROGMEM = {
 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0,
 0, 1, 1, 0, 1, 0,
 1, 0, 0, 1, 1, 0,
 1, 0, 0, 0, 1, 0,
 0, 1, 1, 1, 1, 0,
 0, 0, 0, 0, 1, 0,
 0, 0, 0, 0, 1, 0};

//r
int r_base[] PROGMEM = {
 0, 0, 0, 0, 0, 0, 
 0, 0, 0, 0, 0, 0, 
 1, 0, 1, 1, 0, 0, 
 1, 1, 0, 0, 1, 0, 
 1, 0, 0, 0, 0, 0, 
 1, 0, 0, 0, 0, 0, 
 1, 0, 0, 0, 0, 0, 
 0, 0, 0, 0, 0, 0};

//s
int s_base[] PROGMEM = {
0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 
0, 1, 1, 1, 1, 0, 
1, 0, 0, 0, 0, 0, 
0, 1, 1, 1, 0, 0, 
0, 0, 0, 0, 1, 0, 
1, 1, 1, 1, 0, 0, 
0, 0, 0, 0, 0, 0};

//t
int t_base[] PROGMEM = {
0, 1, 0, 0,
0, 1, 0, 0,
1, 1, 1, 0,
0, 1, 0, 0,
0, 1, 0, 0,
0, 1, 0, 0,
0, 0, 1, 0,
0, 0, 0, 0};

//u
int u_base[] PROGMEM = {
 0, 0, 0, 0, 0, 0, 
 0, 0, 0, 0, 0, 0, 
 1, 0, 0, 0, 1, 0, 
 1, 0, 0, 0, 1, 0, 
 1, 0, 0, 0, 1, 0, 
 1, 0, 0, 0, 1, 0, 
 0, 1, 1, 1, 1, 0, 
 0, 0, 0, 0, 0, 0};

//v
int v_base[] PROGMEM = {
0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 1, 0, 
1, 0, 0, 0, 1, 0, 
1, 0, 0, 0, 1, 0, 
0, 1, 0, 1, 0, 0, 
0, 0, 1, 0, 0, 0, 
0, 0, 0, 0, 0, 0};

//w
int w_base[] PROGMEM = {
0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 1, 0, 
1, 0, 0, 0, 1, 0, 
1, 0, 1, 0, 1, 0, 
1, 0, 1, 0, 1, 0, 
0, 1, 1, 1, 1, 0, 
0, 0, 0, 0, 0, 0};

//x
int x_base[] PROGMEM = {
0, 0, 0, 0, 0, 0,
0, 0, 0, 0, 0, 0,
1, 0, 0, 0, 1, 0,
0, 1, 0, 1, 0, 0,
0, 0, 1, 0, 0, 0,
0, 1, 0, 1, 0, 0,
1, 0, 0, 0, 1, 0,
0, 0, 0, 0, 0, 0};

//y
int y_base[] PROGMEM = {
 0, 0, 0, 0, 0, 0, 
 0, 0, 0, 0, 0, 0, 
 1, 0, 0, 0, 1, 0, 
 1, 0, 0, 0, 1, 0, 
 1, 0, 0, 0, 1, 0, 
 0, 1, 1, 1, 1, 0, 
 0, 0, 0, 0, 1, 0, 
 1, 1, 1, 1, 0, 0}; 

//z
int z_base[] PROGMEM = {
0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 0, 
0, 0, 0, 1, 0, 0, 
0, 0, 1, 0, 0, 0, 
0, 1, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 0, 
0, 0, 0, 0, 0, 0};

//invalid
int invalid[] PROGMEM = {
1, 1, 1, 1,
1, 0, 0, 1,
1, 0, 0, 1,
1, 0, 0, 1,
1, 0, 0, 1,
1, 0, 0, 1,
1, 0, 0, 1,
1, 1, 1, 1};
